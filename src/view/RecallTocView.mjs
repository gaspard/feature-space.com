// Generated by ReScript, PLEASE EDIT WITH CARE

import * as App from "./App.mjs";
import * as Stack from "../domain/api/entity/Stack.mjs";
import * as TiliaReact from "@tilia/react/src/TiliaReact.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function RecallTocView$StackItem(props) {
  TiliaReact.useTilia();
  var info = props.item.info;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("span", {
                      children: Stack.stackTypeToEmoji(info.kind)
                    }),
                JsxRuntime.jsx("span", {
                      children: info.chapter
                    }),
                JsxRuntime.jsx("span", {
                      children: info.course
                    })
              ],
              className: "grid grid-cols-subgrid"
            }, info.id);
}

var StackItem = {
  make: RecallTocView$StackItem
};

function partition(list, predicate) {
  var map = new Map();
  list.forEach(function (item) {
        var key = predicate(item);
        var match = map.get(key);
        var list = match !== undefined ? match.list : [];
        list.push(item);
        map.set(key, {
              key: key,
              list: list
            });
      });
  return Array.from(map.values());
}

function RecallTocView(props) {
  TiliaReact.useTilia();
  var groups = partition(App.app.toc.stacks, (function (v) {
          return v.info.level;
        }));
  return groups.map(function (group) {
              return JsxRuntime.jsxs("div", {
                          children: [
                            JsxRuntime.jsx("h1", {
                                  children: Stack.levelToString(group.key)
                                }),
                            JsxRuntime.jsx("div", {
                                  children: group.list.map(function (item) {
                                        return JsxRuntime.jsx(RecallTocView$StackItem, {
                                                    item: item
                                                  }, item.info.id);
                                      }),
                                  className: "grid grid-cols-[0_fr_1fr_2fr] gap-2"
                                })
                          ]
                        }, Stack.levelToString(group.key));
            });
}

var make = RecallTocView;

export {
  StackItem ,
  partition ,
  make ,
}
/* App Not a pure module */
