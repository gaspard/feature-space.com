// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TiliaReact from "@tilia/react/src/TiliaReact.mjs";
import MarkdownTsx from "./Markdown.tsx";
import * as JsxRuntime from "react/jsx-runtime";

var make = MarkdownTsx;

var Markdown = {
  make: make
};

function RecallView$Front(props) {
  var front = props.front;
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsx("div", {
                    children: JsxRuntime.jsx(make, {
                          text: front.content
                        }),
                    className: "card-question",
                    onClick: (function (param) {
                        front.turn();
                      })
                  }),
              className: "card"
            });
}

var Front = {
  make: RecallView$Front
};

function RecallView$Back(props) {
  var back = props.back;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx(make, {
                            text: back.content
                          }),
                      className: "card-question"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsxs("details", {
                            children: [
                              JsxRuntime.jsx("summary", {
                                    children: JsxRuntime.jsx("strong", {
                                          children: "Solution"
                                        })
                                  }),
                              JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("button", {
                                            children: "Encore",
                                            className: "eval again",
                                            onClick: (function (param) {
                                                back.evaluate("again");
                                              })
                                          }),
                                      JsxRuntime.jsx("button", {
                                            children: "Difficile",
                                            className: "eval hard",
                                            onClick: (function (param) {
                                                back.evaluate("hard");
                                              })
                                          }),
                                      JsxRuntime.jsx("button", {
                                            children: "Bien",
                                            className: "eval good",
                                            onClick: (function (param) {
                                                back.evaluate("good");
                                              })
                                          }),
                                      JsxRuntime.jsx("button", {
                                            children: "Facile",
                                            className: "eval easy",
                                            onClick: (function (param) {
                                                back.evaluate({
                                                      kind: "easy",
                                                      _0: 1
                                                    });
                                              })
                                          })
                                    ],
                                    className: "card-evaluate"
                                  }),
                              JsxRuntime.jsx(make, {
                                    text: back.solution
                                  })
                            ],
                            open: true
                          }),
                      className: "card-answer"
                    })
              ],
              className: "card"
            });
}

var Back = {
  make: RecallView$Back
};

function RecallView(props) {
  var recall = props.recall;
  TiliaReact.useTilia();
  var front = recall.view;
  var tmp;
  tmp = front.TAG === "Front" ? JsxRuntime.jsx(RecallView$Front, {
          front: front._0
        }) : JsxRuntime.jsx(RecallView$Back, {
          back: front._0
        });
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("span", {
                              children: "à réviser"
                            }),
                        JsxRuntime.jsx("span", {
                              children: recall.stats.toRecall.toString()
                            }),
                        JsxRuntime.jsx("span", {
                              children: "vues"
                            }),
                        JsxRuntime.jsx("span", {
                              children: recall.stats.seen.toString()
                            }),
                        JsxRuntime.jsx("span", {
                              children: "nouvelles"
                            }),
                        JsxRuntime.jsx("span", {
                              children: recall.stats.new.toString()
                            }),
                        JsxRuntime.jsx("span", {
                              children: "total"
                            }),
                        JsxRuntime.jsx("span", {
                              children: recall.stats.total.toString()
                            })
                      ],
                      className: "stats"
                    }),
                tmp
              ]
            });
}

var make$1 = RecallView;

export {
  Markdown ,
  Front ,
  Back ,
  make$1 as make,
}
/* make Not a pure module */
